export interface Action {
  type: string;
  payload?: any;
}

export enum PagesList {
  Authentication = 'auth',
  Videos = 'videos',
  Registrations = 'registration',
}

export enum PagesTypesActions {
  MOVE_TO_ANOTHER_PAGE = 'MOVE_TO_ANOTHER_PAGE',
}

export enum ActionVideosTypes {
  USER_OWN_VIDEOS_REQUEST = 'USER_OWN_VIDEOS_REQUEST',
  USER_OWN_VIDEOS_SUCCESS = 'USER_OWN_VIDEOS_SUCCESS',
  USER_OWN_VIDEOS_FAILURE = 'USER_OWN_VIDEOS_FAILURE',
  USER_SHARED_VIDEOS_REQUEST = 'USER_SHARED_VIDEOS_REQUEST',
  USER_SHARED_VIDEOS_SUCCESS = 'USER_SHARED_VIDEOS_SUCCESS',
  USER_SHARED_VIDEOS_FAILURE = 'USER_SHARED_VIDEOS_FAILURE',
  ADD_NEW_VIDEO_REQUEST = 'ADD_NEW_VIDEO_REQUEST',
  ADD_NEW_VIDEO_SUCCESS = 'ADD_NEW_VIDEO_SUCCESS',
  ADD_NEW_VIDEO_FAILURE = 'ADD_NEW_VIDEO_FAILURE',
  DELETE_VIDEO_REQUEST = 'DELETE_VIDEO_REQUEST',
  DELETE_VIDEO_SUCCESS = 'DELETE_VIDEO_SUCCESS',
  DELETE_VIDEO_FAILURE = 'DELETE_VIDEO_FAILURE',
  CLEAR_STATUS_OF_REMOVING_VIDEO = 'CLEAR_STATUS_OF_REMOVING_VIDEO',
  CLEAR_STATUS_OF_ADDING_VIDEO = 'CLEAR_STATUS_OF_ADDING_VIDEO',
  SHARE_VIDEO_REQUEST = 'SHARE_VIDEO_REQUEST',
  SHARE_VIDEO_SUCCESS = 'SHARE_VIDEO_SUCCESS',
  SHARE_VIDEO_FAILURE = 'SHARE_VIDEO_FAILURE',
  CLEAR_STATUS_OF_SHARING_VIDEO = 'CLEAR_STATUS_OF_SHARING_VIDEO',
  EDIT_VIDEO_REQUEST = 'EDIT_VIDEO_REQUEST',
  EDIT_VIDEO_SUCCESS = 'EDIT_VIDEO_SUCCESS',
  EDIT_VIDEO_FAILURE = 'EDIT_VIDEO_FAILURE',
  CLEAR_STATUS_OF_EDITING_VIDEO = 'CLEAR_STATUS_OF_EDITING_VIDEO',
}

export enum UserActionTypes {
  REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST',
  REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS',
  REGISTER_USER_FAILURE = 'REGISTER_USER_FAILURE',
  REGISTER_CLEAR_STATUS = 'REGISTER_CLEAR_STATUS',
  AUTH_USER_REQUEST = 'AUTH_USER_REQUEST',
  AUTH_USER_SUCCSESS = 'AUTH_USER_SUCCSESS',
  AUTH_USER_FAILURE = 'AUTH_USER_FAILURE',
  UNAUTHORIZE = 'UNAUTHORIZE',
}
